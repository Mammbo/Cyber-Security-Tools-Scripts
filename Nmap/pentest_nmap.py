#!/usr/bin/env python
# Use these commands in Kali to install required software:
#  sudo apt install python3-pip
#  pip install python-nmap

# nmap scan and pentest

import csv
import os
import sys

import nmap
from timeit import default_timer as timer


# download python and all dependencies

def update():

    sys_vers = sys.platform()

    if sys_vers is 'linux':

        if sys_vers == os.system('"$ID" == "debian"'):
            os.system(
                "apt update; apt upgrade; apt install nmap -y; sudo apt install python3-pip; pip install python-nmap; apt-get install python"
            )

        elif (
            sys_vers == os.system('"$ID" == "rhel"')
            or os.system('"$ID" == "centos"')
            or os.system('"$ID" == "fedora"')
        ):

            os.system(
                "dnf update; yum upgrade; dnf install nmap -y; sudo dnf install python3-pip; pip install python-nmap; dnf install python"
            )
    elif sys_vers is 'win32':
        pass

    else:
        print("This script is running on an unsupported distribution.")

    
    return sys_vers


# get current time

now = timer.localtime()
formatted_time = timer.strftime("%H:%M:%S %p", now)

# find size of network

def network(sys_vers): 
    if sys_vers is 'linux':
        ip_addr_net_mask = os.system("ip a | grep -Eo '\b([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]+\sbrd\s\b'")
        return ip_addr_net_mask
    elif sys_vers is 'win32':
        pass
        return ip_addr_net_mask
    
    else: 
        print('unsupported distro')

# do the network scan
def network_scanner(ip_address):
    host = ip_address
    ns = nmap.PortScanner()

    ns.scan(host, '-v' '-sS')
    print(ns.scaninfo())


# parse data

# input data into a cleaned csv file

# add time stamp to new file

# after every new scan in automation scan print the ip address in the bottom of the file of new item
